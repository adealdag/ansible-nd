# Test code for the ND modules
# Copyright: (c) 2023, Alejandro de Alda (@adealdag) <adealdag@cisco.com>

# GNU General Public License v3.0+ (see LICENSE or https://www.gnu.org/licenses/gpl-3.0.txt)

- name: Test that we have an Nexus Dashboard host, username and password
  fail:
    msg: "Please define the following variables: nd_hostname, nd_username and nd_password."
  when: nd_hostname is not defined or nd_username is not defined or nd_password is not defined

- name: Test that we have an Nexus Dashboard Insights Group and Site Name defined
  fail:
    msg: "Please define the following variables: ig_name, site_name."
  when: ig_name is not defined or site_name is not defined

# CLEAN ENVIRONMENT
- name: Set vars
  set_fact:
    nd_info: &nd_info
      host: "{{ nd_hostname }}"
      username: "{{ nd_username }}"
      password: "{{ nd_password }}"
      validate_certs: "{{ nd_validate_certs | default(false) }}"
      use_ssl: "{{ nd_use_ssl | default(true) }}"
      use_proxy: "{{ nd_use_proxy | default(true) }}"
      output_level: '{{ nd_output_level | default("info") }}'

# TRIGGER INSTANT ASSURANCE ANALYSIS
- name: Trigger instant assurance analysis job
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    insights_group: "{{ ig_name }}"
    site_name: "{{ site_name }}"
    state: present
  register: instant_analysis_triggered

# WAIT AND LOOP UNTIL INSTANT ANALYSIS IS COMPLETED
- name: Wait until instant assurance analysis is completed
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    insights_group: "{{ ig_name }}"
    site_name: "{{ site_name }}"
    job_id: "{{ instant_analysis_triggered.current.jobId }}"
    state: query
  register: instant_analysis_info
  until: instant_analysis_info.current.operSt == "COMPLETE"
  retries: 200
  delay: 6

- name: Verify instant_analysis_info
  assert:
    that:
      - instant_analysis_info.current.operSt == "COMPLETE"
      - instant_analysis_info.current.epochInfo is defined
      - instant_analysis_info.current.epochInfo.epochId is defined

# QUERY LIST OF INSTANT ANALYSIS
- name: Get history of instant assurance analysis
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    insights_group: "{{ ig_name }}"
    site_name: "{{ site_name }}"
    state: query
  register: instant_analysis_history

# QUERY USING ALIASES
- name: Get history of instant assurance analysis using aliases
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    ig_name: "{{ ig_name }}"
    site: "{{ site_name }}"
    state: query
  register: instant_analysis_history

# USE INVALID STATE OPTION
- name: Test invalid state option
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    insights_group: "{{ ig_name }}"
    site_name: "{{ site_name }}"
    state: absent
  ignore_errors: true

# MISSING REQUIRED PARAMETERS
- name: Test failure when missing insights_group
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    site_name: "{{ site_name }}"
    state: present
  ignore_errors: true

- name: Test failure when missing site_name
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    insights_group: "{{ ig_name }}"
    state: present
  ignore_errors: true

# CHECK MODE
- name: Test Check Mode
  cisco.nd.nd_instant_assurance_analysis:
    <<: *nd_info
    insights_group: "{{ ig_name }}"
    site_name: "{{ site_name }}"
    state: present
  check_mode: true
  register: instant_analysis_info
